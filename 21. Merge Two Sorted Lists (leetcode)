/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* curr1=list1;
        ListNode* curr2=list2;
        ListNode* dummy=new ListNode(-1);
        ListNode* current=dummy;
        if(curr1&&curr2)
        {
            while(curr1&&curr2){
                if(curr1->val<curr2->val)
                {
                    current->next=curr1;
                    current=curr1;
                    curr1=curr1->next;
                }
                else
                {
                    current->next=curr2;
                    current=curr2;
                    curr2=curr2->next;
                }
            }
            if(curr1)
            {
                current->next=curr1;
            }
            if(curr2)
            {
                current->next=curr2;
            }
            return dummy->next;
        }
        else if(curr1)
        {
            return list1;
        }
        else if(curr2)
        {
            return list2;
        }
        else
        {
            return NULL;
        }
    }
};
