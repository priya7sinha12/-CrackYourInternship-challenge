class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<vector<int>> result;
        if(n<4)
        {
            return result;
        }
        sort(nums.begin(),nums.end());
        int a,b,c,d;
        for(int i=0;i<n-3;i++)
        {
            if(i>0&&nums[i]==nums[i-1])
            {
                continue;
            }
            a=nums[i];
            for(int j=i+1;j<n-2;j++)
            {
                if(j>i+1&&nums[j]==nums[j-1])
                {
                    continue;
                }
                b=nums[j];
                c=j+1;
                d=n-1;
                long long int t1=a+b;
                t1=target-t1;
                while(c<d)
                {
                    long long int t2=nums[c]+nums[d];
                    if(t2==t1)
                    {
                        result.push_back({a,b,nums[c],nums[d]});
                        while(c<d&&nums[c]==nums[c+1])
                        {
                            c++;
                        }
                        while(c<d&&nums[d]==nums[d-1])
                        {
                            d--;
                        }
                        c++;
                        d--;
                    }
                    else if(t2<t1)
                    {
                        c++;
                    }
                    else
                    {
                        d--;
                    }
                }
            }
        }
        return result;
    }
};
