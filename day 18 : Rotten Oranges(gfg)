//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution 
{
    public:
    //Function to find minimum time required to rot all oranges. 
    bool isvalid(int n,int m,int x,int y,vector<vector<int>>& grid)
    {
        if(x>=0&&x<n&&y>=0&&y<m&&grid[x][y]==1)
        {
            return true;
        }
        return false;
    }
    int orangesRotting(vector<vector<int>>& grid) {
        // Code here
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<int,int>> q;
        int fresh=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({i,j});
                }
                else if(grid[i][j]==1)
                {
                    fresh++;
                }
            }
        }
        if(fresh==0)
        {
            return 0;
        }
        int time=0,temp=0,ele;
        while(q.size())
        {
            temp=0;
            ele=q.size();
            while(ele)
            {
                pair<int,int>p=q.front();
                q.pop();
                int x1=p.first,x2=p.second;
                int ax[4]={0,0,1,-1},ay[4]={1,-1,0,0};
                for(int i=0;i<4;i++)
                {
                        int x=ax[i]+x1;
                        int y=ay[i]+x2;
                        if(isvalid(n,m,x,y,grid))
                        {
                            temp++;
                            grid[x][y]=2;
                            q.push({x,y});
                        }
                }
                ele--;
            }
            if(temp>0)
            {
                time++;
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                {
                    time=0;
                    break;
                }
            }
        }
        return (time==0)?-1:time;
    }
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>>grid(n, vector<int>(m, -1));
		for(int i = 0; i < n; i++){
			for(int j = 0; j < m; j++){
				cin >> grid[i][j];
			}
		}
		Solution obj;
		int ans = obj.orangesRotting(grid);
		cout << ans << "\n";
	}
	return 0;
}
// } Driver Code Ends
