class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> list;
        int m=matrix.size();
        int n=matrix[0].size();
        int t=0,b=m-1,l=0,r=n-1,d=0;
        //d is direction,t is top of matrix,b is bottom,l is left,r is right
        while(l<=r&&t<=b)
        {
            if(d==0)
            {
                for(int i=l;i<=r;i++)
                {
                    list.push_back(matrix[t][i]);
                }
                t++;
                d=1;
            }
            else if(d==1)
            {
                for(int i=t;i<=b;i++)
                {
                    list.push_back(matrix[i][r]);
                }
                r--;
                d=2;
            }
            else if(d==2)
            {
                for(int i=r;i>=l;i--)
                {
                    list.push_back(matrix[b][i]);
                }
                b--;
                d=3;
            }
            else if(d=3)
            {
                for(int i=b;i>=t;i--)
                {
                    list.push_back(matrix[i][l]);
                }
                l++;
                d=0;
            }
        }
        return list;
    }
};
