/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL||head->next==NULL)
        {
            return 1;
        }
        ListNode* hare=head;
        ListNode *tortoise=head;
        while(hare->next&&hare->next->next)
        {
            hare=hare->next->next;
            tortoise=tortoise->next;
        }
        ListNode* prev=NULL;
        ListNode* current=tortoise->next;
        ListNode* next;
        while(current!=NULL)
        {
            next=current->next;
            current->next=prev;
            prev=current;
            current=next;
        }
        ListNode * head1=head;
        while(prev)
        {
            if(head1->val!=prev->val)
            {
                return 0;
            }
            head1=head1->next;
            prev=prev->next;
        }
        return 1;
    }
};
