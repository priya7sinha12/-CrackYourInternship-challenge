/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool ans=false;
    bool check(TreeNode* root,TreeNode*subRoot)
    {
        if(root&&subRoot)
        {
            bool a=check(root->left,subRoot->left);
            bool b=check(root->right,subRoot->right);
            if((root->val==subRoot->val)&&a&&b)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else if(root==NULL&&subRoot==NULL)
        {
            return true;
        }
        return false;
    }
    void inorder(TreeNode* root, TreeNode* subRoot)
    {
        if(root)
        {
            inorder(root->left,subRoot);
            bool x=check(root,subRoot);
            if(x)
            {
                ans=x;
            }
            inorder(root->right,subRoot);
        }
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        inorder(root,subRoot);
        return ans;
    }
};
