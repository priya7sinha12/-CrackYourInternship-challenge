/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<int> stack1;
        stack<int> stack2;
        while(l1)
        {
            stack1.push(l1->val);
            l1=l1->next;
        }
        while(l2)
        {
            stack2.push(l2->val);
            l2=l2->next;
        }
        int a,b,carry=0,n;
        ListNode *dummy=new ListNode(-1);
        ListNode *curr=dummy;
        stack<int> stack3;
        while(!stack1.empty()||!stack2.empty())
        {
            a=0;b=0;
            if(!stack1.empty())
            {
                a=stack1.top();
                stack1.pop();
            }
            if(!stack2.empty())
            {
                b=stack2.top();
                stack2.pop();
            }
            n=a+b+carry;
            stack3.push(n%10);
            carry=n/10;
        }
        if(carry==1)
        {
            stack3.push(1);
        }
        while(!stack3.empty())
        {
            curr->next=new ListNode(stack3.top());
            stack3.pop();
            curr=curr->next;
        }
        return dummy->next;
    }
};
