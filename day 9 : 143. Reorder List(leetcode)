/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode * rev(ListNode * current)
    {
        ListNode* prev=NULL;
        ListNode* next;
        while(current!=NULL)
        {
            next=current->next;
            current->next=prev;
            prev=current;
            current=next;
        }
        return prev;
    }
    void reorderList(ListNode* head) {
        if(head->next==NULL)
        {
            return ;
        }
        ListNode *tortoise=head,*hare=head;
        while(hare!=NULL&&hare->next!=NULL)
        {
            tortoise=tortoise->next;
            hare=hare->next->next;
        }
        //ListNode *list1=head;
        ListNode *list2=tortoise->next;;
        tortoise->next=NULL;
        ListNode *list1=head;
        ListNode *temp1,*temp2;
        list2=rev(list2);
        while(list1&&list2)
        {
            temp1=list1->next;
            temp2=list2->next;
            list1->next=list2;
            list2->next=temp1;
            list1=temp1;
            list2=temp2;
        }
        //return head;
    }
};
