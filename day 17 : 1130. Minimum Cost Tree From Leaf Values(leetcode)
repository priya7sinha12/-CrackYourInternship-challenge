class Solution {
public:
 pair<int,int>p[41][41];
 pair<int,int> recur(int s,int e,vector<int>&arr)
 {
     if(p[s][e].first!=-1)
     return p[s][e];
     else if(s==e)
     {
         return p[s][e]={arr[s],0};
     }
     else
     {
         int sum=INT_MAX;
         int maxxleaf=INT_MIN;

    for(int i=s;i<e;i++)
    {
        pair<int,int> p1=recur(s,i,arr);
        pair<int,int> p2=recur(i+1,e,arr);
        maxxleaf=max({maxxleaf,p1.first,p2.first});
        sum=min({sum,p1.first*p2.first+p1.second+p2.second});
    }     
    return p[s][e]={maxxleaf,sum};
     }
     return p[s][e]={0,0};
 }
    int mctFromLeafValues(vector<int>& arr) {
       for(int i=0;i<41;i++)
       {
           for(int j=0;j<41;j++)
           {
               p[i][j]={-1,-1};
           }
       }
       return recur(0,arr.size()-1,arr).second;
    }
};
